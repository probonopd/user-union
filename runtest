#!/bin/sh

# Run test of user-union. Takes 1 parameter, the srcdir.
# Invoke "user_union" in test mode, with overlay of "./overlay" on "/",
# to run the script "testscript".  Summarize the results in "overlay_results"
# and do a diff with "expected_results".

if [ "$#" -ne 1 ] ; then
  echo "Must provide exactly one argument (the source directory)" >&2
  exit 1
elif [ -z "$1" ] ; then
  echo "Argument must not be empty" >&2
  exit 1
fi

srcdir="$1"

# Remove 'space', so filenames with spaces work well.
IFS="$(printf '\n\t')"
tab="$(printf '\t')"
# The following is a standards-compliant trick to get newline into a variable:
newline="$(printf '\nX')"
newline="${newline%X}"

startdir="$(pwd)"
overlay="${startdir}/overlay"
underlay="/"

PATH="$startdir:$PATH"

# To simulate multiple underlays:
# nonunion="${nonunion}${newline}/a${tab}/b${tab}/c"
# nonunion="${newline}/tmp${newline}/home"

rm -fr "$overlay"
mkdir -p "$overlay" || \
  ( echo "Failed to create overlay directory $overlay" ; exit 1 )

echo "About to run tests!"

# Set MALLOC_CHECK_ to detect some problems.
export MALLOC_CHECK_=3

# Run the main body of tests:
./user-union -t -a "$overlay" "$underlay" -i /home -i /tmp -i /var/tmp \
  "${srcdir}/testscript"
if [ -f "$(user-union -P)/usr/bin/hello" ]
then
  echo "FAILURE: /usr/bin/hello was actually created!"
  rm -f "$(user-union -P)/usr/bin/hello"
  exit 1
fi


# Also do a simple test with run-redir-union, basically a smoke test
# to make sure it can be run at all:
demo2="/tmp/demo2"
rm -fr "$demo2" || die "Can't remove $demo2"
mkdir -p "$demo2" || die "Can't create $demo2"
DESTDIR="$demo2" ./run-redir-union -t ln -s /wokka /usr/bin
if [ -L "$demo2/usr/bin/wokka" ] && [ -d "$overlay/usr/bin" ] ; then
  mv "$demo2/usr/bin/wokka" "$overlay/usr/bin/wokka"
else
  echo "Whups, failed to get correct result from run-redir-union."
fi

echo
echo "Tests done.  Comparing to find differences with the expected results:"


# TODO: This currently requires GNU extensions (find -printf),
# need an easy portable way to print data about files.
reporter() {
  find .  -exec fso_stat {} + | sort
}


(cd "$overlay" ; reporter ) > "overlay_results"

if diff -u "expected_results" "overlay_results"
then
  # TODO: Compare the permissions
  echo "No differences. All tests passed!"
else
  echo "DIFFERENCES FOUND."
  echo "Leading + indicates items the overlay adds, beyond those expected."
  echo "Leading - indicates items the overlay removes from those expected."
  echo "Lines show filename, type, size, octal permissions, symlink, checksum."
  echo "If they're okay, run 'make accept'"
fi

